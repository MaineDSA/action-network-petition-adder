[project]
name = "action-network-petition-adder"
version = "0.2.0"
description = "adds csv of signers to an action network petition via kiosk mode"
readme = "README.md"
license = { "file" = "LICENSE" }
requires-python = ">=3.11"
dependencies = [
    "patchright~=1.55",
    "tqdm~=4.67",
]

[project.optional-dependencies]
dev = [
    "bandit[sarif]==1.8.6",
    "mypy==1.18.2",
    "pre-commit==4.3.0",
    "pytest-asyncio==1.2.0",
    "pytest-cov==7.0.0",
    "pytest-xdist==3.8.0",
    "pytest==8.4.2",
    "ruff==0.14.1",
    "types-tqdm==4.67.0.20250809"
]
github-actions = [
    "coverage==7.11.0",
    "pytest-cov==7.0.0",
]

[tool.ruff]
line-length = 160
include = [
    "src/**/*.py",
    "tests/**/*.py",
]

[tool.ruff.lint]
select = [
    "B", # flake8-bugbear (B)
    "E", # pycodestyle errors (E)
    "W", # pycodestyle warnings (W)
    "C4", # flake8-comprehensions (C4)
    "F", # Pyflakes (F)
    "UP", # pyupgrade (UP)
    "I", # isort (I)
    "TID", # flake8-tidy-imports (TID)
    "ICN", # flake8-import-conventions (ICN)
    "Q", # flake8-quotes (Q)
    "TC", # flake8-type-checking (TC)
    "YTT", # flake8-2020 (YTT)
    "SIM", # flake8-simplify (SIM)
    "PTH", # flake8-use-pathlib (PTH)
    "ISC", # flake8-implicit-str-concat (ISC)
    "PT", # flake8-pytest-style (PT)
]
ignore = [
    "D100",
    "D103",
    "D104",
    "D203",
    "D212",
]

[tool.pytest.ini_options]
addopts = "--cov=src --no-cov-on-fail -n auto"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "module"
testpaths = [
    "tests/",
]

[tool.coverage.run]
branch = true
relative_files = true
command_line = "-m pytest"

[tool.coverage.paths]
source = [
    "src/",
]
omit = [
    "tests/",
]

[tool.coverage.report]
exclude_also = [
    "logger.",
]
